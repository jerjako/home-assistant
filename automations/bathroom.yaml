- id: turn_on_lights_when_there_is_movement
  alias: Turn on lights when there is movement
  trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_motion_sensor
      to: "on"
  action:
    - condition: state
      entity_id: binary_sensor.home_presence_detection
      state: "on"
    - service: light.turn_on
      data:
        entity_id: light.bathroom_lights
        brightness: 255
        color_temp: 1

- id: turn_off_lights_when_there_is_no_movement
  alias: Turn off lights when there is no movement
  trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_motion_sensor
      to: "off"
      for:
        minutes: 10 # default Xiaomi rearm is 2mn
  action:
    - service: light.turn_on
      data:
        entity_id: light.bathroom_lights
        brightness: 255
        rgb_color: [255, 255, 0]
        transition: 5
    - delay: 00:00:30
    - condition: state
      entity_id: binary_sensor.bathroom_motion_sensor
      state: "off"  # if a movement is triggered, stop turn off sequence
    - service: light.turn_off
      data:
        entity_id: light.bathroom_lights

- id: turn_on_lights_when_humidity_is_over_the_normal 
  alias: Turn on lights when humidity is over the normal
  trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_humidity_high
      to: "on"
  condition:
    - condition: state
      entity_id: light.bathroom_lights
      state: "on"
  action:
    - service: mqtt.publish
      data_template:
        topic: 'cmnd/sonoff1/POWER'
        payload: 'ON'
    - service: mqtt.publish
      data_template:
        topic: 'cmnd/sonoff2/POWER'
        payload: 'ON'

- id: turn_off_lights_when_humidity_is_low
  alias: Turn off lights when humidity is low
  trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_humidity_high
      to: "off"
  condition:
    - condition: state
      entity_id: binary_sensor.bathroom_motion_sensor
      state: "off"
  action:
    # - service: light.turn_off
    #   entity_id: light.bathroom
    - service: mqtt.publish
      data_template:
        topic: 'cmnd/sonoff1/POWER'
        payload: 'OFF'
    - service: mqtt.publish
      data_template:
        topic: 'cmnd/sonoff2/POWER'
        payload: 'OFF'

- id: glass_on
  alias: Pair glass and lights - On
  trigger:
    - platform: state
      entity_id: light.bathroom_lights
      to: "on"
  action:
    - service: light.turn_on
      entity_id: light.bathroom_glass

- id: glass_off
  alias: Pair glass and lights - Off
  trigger:
    - platform: state
      entity_id: light.bathroom_lights
      to: "off"
  action:
    - service: light.turn_off
      entity_id: light.bathroom_glass

- id: bathroom_radiator
  alias: Bahroom radiator
  trigger:
    platform: state
    entity_id: input_select.bathroom_radiator
  action:
    entity_id: light.bathroom_radiator
    service_template: >
      {% if is_state('input_select.bathroom_radiator', 'Comfort') %}
        light.turn_on
      {% elif is_state('input_select.bathroom_radiator', 'Comfort -1') %}
        light.turn_on
      {% elif is_state('input_select.bathroom_radiator', 'Comfort -2') %}
        light.turn_on
      {% elif is_state('input_select.bathroom_radiator', 'Eco') %}
        light.turn_on
      {% elif is_state('input_select.bathroom_radiator', 'Anti-Freeze') %}
        light.turn_on
      {% elif is_state('input_select.bathroom_radiator', 'Off') %}
        light.turn_off
      {% else %}
        light.turn_off
      {% endif %}
    data_template:
      brightness: >
        {% if is_state('input_select.bathroom_radiator', 'Comfort') %}
          130
        {% elif is_state('input_select.bathroom_radiator', 'Comfort -1') %}
          105
        {% elif is_state('input_select.bathroom_radiator', 'Comfort -2') %}
          79
        {% elif is_state('input_select.bathroom_radiator', 'Eco') %}
          54
        {% elif is_state('input_select.bathroom_radiator', 'Anti-Freeze') %}
          28
        {% elif is_state('input_select.bathroom_radiator', 'Off') %}
          0
        {% else %}
          0
        {% endif %}

- id: bathroom_radiator_eco
  alias: Bathroom Radiator eco
  trigger:
    - platform: state
      entity_id: input_boolean.home_radiators
      to: "off"
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.boiler
    - service: input_select.select_option
      data_template:
        entity_id: input_select.bathroom_radiator
        option: Eco

- id: bathroom_radiator_heat
  alias: Bathroom Radiator heat
  trigger:
    - platform: state
      entity_id: input_boolean.home_radiators
      to: "on"
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.boiler
    - service: input_select.select_option
      data_template:
        entity_id: input_select.bathroom_radiator
        option: Comfort

- id: bathroom_water_leak
  alias: Bathroom Water leak
  trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_water_leak
      to: "on"
  action:
    - service: notify.ios
      data:
        message: Bathroom - Water leak detected
